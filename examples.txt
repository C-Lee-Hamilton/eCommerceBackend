//get user Quizzes
router.get("/my-quiz", async (req, res) => {
  const { username } = req.query;

  try {
    let myQuizzes = await Quiz.find({ author: username });

    res.status(200).json(myQuizzes);
  } catch (err) {
    console.error("Error in /my-quiz route:", err);
    res.status(500).json({ error: "Internal Server Error" });
  }
});
//get Popular Quizzes
router.get("/pop-quiz", async (req, res) => {
  try {
    const popQuizzes = await Quiz.find({}).sort({ views: -1 }).limit(10);
    res.status(200).json(popQuizzes);
  } catch (err) {
    console.error("Error in /my-quiz route:", err);
    res.status(500).json({ error: "Internal Server Error" });
  }
});
//search by title
router.get("/search-title", async (req, res) => {
  const { title } = req.query;

  try {
    let titleSearch = await Quiz.find({ title: title });

    res.status(200).json(titleSearch);
    console.log(title);
    console.log(titleSearch);
  } catch (err) {
    console.error("Error in /my-quiz route:", err);
    res.status(500).json({ error: "Internal Server Error" });
  }
});
//search by Author
router.get("/search-author", async (req, res) => {
  const { author } = req.query;

  try {
    let authorSearch = await Quiz.find({ author: author });

    res.status(200).json(authorSearch);
    console.log(author);
    console.log(authorSearch);
  } catch (err) {
    console.error("Error in /my-quiz route:", err);
    res.status(500).json({ error: "Internal Server Error" });
  }
});

router.post("/edit-question", async (req, res) => {
  try {
    const { quizId, questionIndex, newData } = req.body;
    const quiz = await Quiz.findById(quizId);
    quiz.quiz[questionIndex] = newData;
    const updatedQuiz = await quiz.save();
    res.status(200).json(updatedQuiz);
  } catch (error) {
    console.error("Error editing question:", error);
    res.status(500).json({ error: "Internal Server Error" });
  }
});


Users.post("/newQuiz", async (req, res) => {
  try {
    const { title, qArray, username, views } = req.body;

    const newQuiz = new Quiz({
      title,
      author: username,
      quiz: qArray,
      views: views,
    });

    const savedQuiz = await newQuiz.save();

    console.log("Quiz saved successfully:", savedQuiz);

    res.json({
      success: true,
      message: "Your quiz has been saved",
      quiz: savedQuiz,
    });
  } catch (error) {
    console.error("Save error:", error);
    res.json({
      success: false,
      message: "Failed to save quiz. Error: " + error.message,
    });
  }
});

Users.post("/edit-quiz-title", async (req, res) => {
  try {
    const { quizId, newTitle } = req.body;
    const updatedQuiz = await Quiz.findByIdAndUpdate(
      quizId,
      { title: newTitle },
      { new: true }
    );
    res.status(200).json(updatedQuiz);
  } catch (error) {
    console.error("Error editing quiz title:", error);
    res.status(500).json({ error: "Internal Server Error" });
  }
});

Users.delete("/delete-question", async (req, res) => {
  try {
    const { quizId, questionIndex } = req.body;
    const quiz = await Quiz.findById(quizId);
    quiz.quiz.splice(questionIndex, 1);
    const updatedQuiz = await quiz.save();
    res.status(200).json(updatedQuiz);
  } catch (error) {
    console.error("Error deleting question:", error);
    res.status(500).json({ error: "Internal Server Error" });
  }
});

Users.delete("/delete-quiz/", async (req, res) => {
  try {
    const { quizId } = req.body;
    await Quiz.findByIdAndDelete(quizId);
    res.status(200).json({ message: "Quiz deleted successfully" });
  } catch (error) {
    console.error("Error deleting quiz:", error);
    res.status(500).json({ error: "Internal Server Error" });
  }
});

Users.post("/add-question", async (req, res) => {
  try {
    const { Question, A, B, C, D, Answer, quizIndex } = req.body;

    const quiz = await Quiz.findById(quizIndex);

    const newQuestion = {
      Question,
      A,
      B,
      C,
      D,
      Answer,
    };
    quiz.quiz.push(newQuestion);

    const updatedQuiz = await quiz.save();

    res.status(200).json(updatedQuiz);
  } catch (error) {
    console.error("Error adding question:", error);
    res.status(500).json({ error: "Internal Server Error" });
  }
});

Users.post("/add-view", async (req, res) => {
  try {
    const { quizId, newViews } = req.body;
    const updatedQuizView = await Quiz.findByIdAndUpdate(
      quizId,
      { views: newViews },
      { new: true }
    );
    res.status(200).json(updatedQuizView);
  } catch (error) {
    console.error("Error editing quiz title:", error);
    res.status(500).json({ error: "Internal Server Error" });
  }
});
import User from "../Models/User.js";
import Quiz from "../Models/Quiz.js";